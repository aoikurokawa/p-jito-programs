//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum JitoTipPaymentError {
    /// 0 - ArithmeticError
    #[error("ArithmeticError")]
    ArithmeticError = 0x0,
    /// 1 - InvalidFee
    #[error("InvalidFee")]
    InvalidFee = 0x1,
    /// 2 - InvalidTipReceiver
    #[error("InvalidTipReceiver")]
    InvalidTipReceiver = 0x2,
    /// 3 - InvalidBlockBuilder
    #[error("InvalidBlockBuilder")]
    InvalidBlockBuilder = 0x3,
}

impl solana_program_error::PrintProgramError for JitoTipPaymentError {
    fn print<E>(&self) {
        solana_msg::msg!(&self.to_string());
    }
}

impl<T> solana_decode_error::DecodeError<T> for JitoTipPaymentError {
    fn type_of() -> &'static str {
        "JitoTipPaymentError"
    }
}
